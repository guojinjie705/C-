#include<iostream>
using namespace std;
#include<string>
//对象初始化和清理
//1.构造函数  进行初始化操作
class Person{
public:
	Person(){
		cout <<"person构造函数的调用" <<endl;
	}



//2.析构函数 进行清理的操作
	~Person(){
		cout <<"person析构函数的调用" <<endl;
	}
};



void test01(){
	Person p;//在栈上的数据，执行后释放
}

int main(){
	test01();
}

/*
如果我们不提供构造和析构，编译器会提供
编译器提供的构造函数和析构函数是空实现。
构造函数：主要作用在于创建对象时为对象的成员属性赋值，构造函数由编译器自动调用，无须手动调用。
析构函数：主要作用在于对象销毁前系统自动调用，执行一些清理工作。
*/

// 构造函数语法：类名(){}

// 1.构造函数，没有返回值也不写void
// 2.函数名称与类名相同
// 3.构造函数可以有参数，因此可以发生重载
// 4.程序在调用对象时候会自动调用构造，无须手动调用,而且只会调用一次

//析构函数：
// 析构函数语法： ~类名(){}

// 1.析构函数，没有返回值也不写void
// 2.函数名称与类名相同,在名称前加上符号 ~
// 3.析构函数不可以有参数，因此不可以发生重载
// 4.程序在对象销毁前会自动调用析构，无须手动调用,而且只会调用一次
